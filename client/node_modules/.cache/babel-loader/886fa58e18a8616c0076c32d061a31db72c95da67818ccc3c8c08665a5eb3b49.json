{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getData } from \"../service/api\";\nimport { Bar } from 'react-chartjs-2';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState();\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    getDetails();\n  }, []);\n  const getDetails = async () => {\n    const response = await getData();\n    console.log(response, \"response from server\");\n    setData(response === null || response === void 0 ? void 0 : response.data);\n  };\n  useEffect(() => {\n    console.log(data, \"data from api\");\n    const intensityValues = data === null || data === void 0 ? void 0 : data.map(item => item.intensity);\n    const titles = data === null || data === void 0 ? void 0 : data.map(item => item.title);\n    setChartData({\n      labels: titles,\n      datasets: [{\n        label: 'Intensity',\n        data: intensityValues,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        // Customize the color as needed\n        borderColor: 'rgba(75, 192, 192, 1)',\n        // Customize the color as needed\n        borderWidth: 1\n      }]\n    });\n    setChartOptions({\n      scales: {\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Intensity'\n          }\n        },\n        x: {\n          title: {\n            display: true,\n            text: 'Title'\n          }\n        }\n      }\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Intensity Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"HmmYPZgtbbTO37Ti0CBZAwON4Jc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","getData","Bar","Table","TableHead","TableBody","TableRow","TableCell","Typography","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","chartData","setChartData","chartOptions","setChartOptions","getDetails","response","console","log","intensityValues","map","item","intensity","titles","title","labels","datasets","label","backgroundColor","borderColor","borderWidth","scales","y","beginAtZero","display","text","x","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\r\n\r\nfunction Dashboard() {\r\n    const [data, setData] = useState();\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartOptions, setChartOptions] = useState({})\r\n\r\n    useEffect(() => {\r\n       getDetails();\r\n    },[])\r\n\r\n    \r\n    const getDetails = async() => {\r\n        const response = await getData();\r\n        console.log(response,\"response from server\")\r\n        setData(response?.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(data,\"data from api\")\r\n        const intensityValues = data?.map(item => item.intensity);\r\n        const titles = data?.map(item => item.title);\r\n      \r\n        setChartData({\r\n          labels: titles,\r\n          datasets: [\r\n            {\r\n              label: 'Intensity',\r\n              data: intensityValues,\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\r\n              borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        });\r\n      \r\n        setChartOptions({\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Intensity',\r\n              },\r\n            },\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Title',\r\n              },\r\n            },\r\n          },\r\n        });\r\n\r\n      },[data])\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h5\">Intensity Chart</Typography>\r\n            <div>\r\n               <Bar data={chartData} options={chartOptions} />\r\n          </div>\r\n            {/* <Table>\r\n              <TableHead>\r\n                 <TableRow>\r\n                    <TableCell>Intensity</TableCell>\r\n                    <TableCell>Likelihood</TableCell>\r\n                    <TableCell>Relevance</TableCell>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>Topics</TableCell>\r\n                    <TableCell>Region</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                 </TableRow>\r\n              </TableHead>\r\n            </Table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAAQC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACbmB,UAAU,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC1B,MAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAAC,CAAC;IAChCoB,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,sBAAsB,CAAC;IAC5CN,OAAO,CAACM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEP,IAAI,CAAC;EAC3B,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZqB,OAAO,CAACC,GAAG,CAACT,IAAI,EAAC,eAAe,CAAC;IACjC,MAAMU,eAAe,GAAGV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IACzD,MAAMC,MAAM,GAAGd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;IAE5CZ,YAAY,CAAC;MACXa,MAAM,EAAEF,MAAM;MACdG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,WAAW;QAClBlB,IAAI,EAAEU,eAAe;QACrBS,eAAe,EAAE,yBAAyB;QAAE;QAC5CC,WAAW,EAAE,uBAAuB;QAAE;QACtCC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC,CAAC;IAEFhB,eAAe,CAAC;MACdiB,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,WAAW,EAAE,IAAI;UACjBT,KAAK,EAAE;YACLU,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,CAAC,EAAE;UACDZ,KAAK,EAAE;YACLU,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF;MACF;IACF,CAAC,CAAC;EAEJ,CAAC,EAAC,CAAC1B,IAAI,CAAC,CAAC;EAEX,oBACIH,OAAA;IAAA+B,QAAA,gBACI/B,OAAA,CAACF,UAAU;MAACkC,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrDpC,OAAA;MAAA+B,QAAA,eACG/B,OAAA,CAACR,GAAG;QAACW,IAAI,EAAEE,SAAU;QAACgC,OAAO,EAAE9B;MAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeH,CAAC;AAEd;AAAClC,EAAA,CA5EQD,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA8ElB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}