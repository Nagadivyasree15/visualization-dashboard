{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { getData } from \"../service/api\";\nimport { Chart } from \"react-google-charts\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  // const [chartData, setChartData] = useState({});\n  // const [chartOptions, setChartOptions] = useState({})\n\n  const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\n  const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\n  //     const data = {\n  //         \"chartType\":\"ColumnChart\",\n  //         \"chart\": [\n  //         [\"country\",\"intensity\"],\n  //         [\"United States of America\",6],\n  //         [\"United States of America\",6],\n  //         [\"Mexico\",6],\n  //         [\"Nigeria\",60],\n  //         [\"Lebanon\",6],\n  //     ],\n  //     \"options\": {\n  //         \"title\":\"Intensity\"\n  //     },\n  //     \"width\": \"100%\",\n  //     \"height\": \"400px\"\n  // }\n  // const chartData = {\n  //   labels: titles,\n  //   datasets: [\n  //     {\n  //       label: 'Intensity',\n  //       data: inValue,\n  //       backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\n  //       borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\n  //       borderWidth: 1,\n  //     },\n  //   ],\n  // };\n\n  // const chartOptions = {\n  //   scales: {\n  //     y: {\n  //       beginAtZero: true,\n  //       title: {\n  //         display: true,\n  //         text: 'Intensity',\n  //       },\n  //     },\n  //     x: {\n  //       title: {\n  //         display: true,\n  //         text: 'Title',\n  //       },\n  //     },\n  //   },\n  // }\n\n  const getDetails = async () => {\n    try {\n      const response = await getData();\n      console.log(response, \"response from server\");\n      setData(response === null || response === void 0 ? void 0 : response.data);\n    } catch (err) {\n      console.log(err, \"err in api\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Intensity Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        chartType: data.chartType,\n        data: data.chart,\n        options: data.options,\n        width: data.width,\n        height: data.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useRef","getData","Chart","Table","TableHead","TableBody","TableRow","TableCell","Typography","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","inValue","titles","getDetails","response","console","log","err","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","chartType","chart","options","width","height","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/dashboard.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\r\n\r\nfunction Dashboard() {\r\n    const [data, setData] = useState([]);\r\n    // const [chartData, setChartData] = useState({});\r\n    // const [chartOptions, setChartOptions] = useState({})\r\n\r\n        const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\r\n        const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\r\n    //     const data = {\r\n    //         \"chartType\":\"ColumnChart\",\r\n    //         \"chart\": [\r\n    //         [\"country\",\"intensity\"],\r\n    //         [\"United States of America\",6],\r\n    //         [\"United States of America\",6],\r\n    //         [\"Mexico\",6],\r\n    //         [\"Nigeria\",60],\r\n    //         [\"Lebanon\",6],\r\n    //     ],\r\n    //     \"options\": {\r\n    //         \"title\":\"Intensity\"\r\n    //     },\r\n    //     \"width\": \"100%\",\r\n    //     \"height\": \"400px\"\r\n    // }\r\n        // const chartData = {\r\n        //   labels: titles,\r\n        //   datasets: [\r\n        //     {\r\n        //       label: 'Intensity',\r\n        //       data: inValue,\r\n        //       backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\r\n        //       borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // };\r\n      \r\n        // const chartOptions = {\r\n        //   scales: {\r\n        //     y: {\r\n        //       beginAtZero: true,\r\n        //       title: {\r\n        //         display: true,\r\n        //         text: 'Intensity',\r\n        //       },\r\n        //     },\r\n        //     x: {\r\n        //       title: {\r\n        //         display: true,\r\n        //         text: 'Title',\r\n        //       },\r\n        //     },\r\n        //   },\r\n        // }\r\n\r\n    \r\n    const getDetails = async() => {\r\n        try {\r\n        const response = await getData();\r\n        console.log(response,\"response from server\")\r\n         setData(response?.data);\r\n    }\r\n    catch(err) {\r\n      console.log(err,\"err in api\")\r\n    }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h5\">Intensity Chart</Typography>\r\n            <div>\r\n                <Chart\r\n                chartType={data.chartType}\r\n                data={data.chart}\r\n                options={data.options}\r\n                width={data.width}\r\n                height={data.height}\r\n                />\r\n          </div>\r\n            {/* <Table>\r\n              <TableHead>\r\n                 <TableRow>\r\n                    <TableCell>Intensity</TableCell>\r\n                    <TableCell>Likelihood</TableCell>\r\n                    <TableCell>Relevance</TableCell>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>Topics</TableCell>\r\n                    <TableCell>Region</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                 </TableRow>\r\n              </TableHead>\r\n            </Table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAAQC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA;;EAEI,MAAMiB,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACjD,MAAMC,MAAM,GAAG,CAAC,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC;EACvJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGJ,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC1B,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAMjB,OAAO,CAAC,CAAC;MAChCkB,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,sBAAsB,CAAC;MAC3CJ,OAAO,CAACI,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEL,IAAI,CAAC;IAC5B,CAAC,CACD,OAAMQ,GAAG,EAAE;MACTF,OAAO,CAACC,GAAG,CAACC,GAAG,EAAC,YAAY,CAAC;IAC/B;EACA,CAAC;EAED,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA,CAACF,UAAU;MAACe,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrDjB,OAAA;MAAAY,QAAA,eACIZ,OAAA,CAACR,KAAK;QACN0B,SAAS,EAAEf,IAAI,CAACe,SAAU;QAC1Bf,IAAI,EAAEA,IAAI,CAACgB,KAAM;QACjBC,OAAO,EAAEjB,IAAI,CAACiB,OAAQ;QACtBC,KAAK,EAAElB,IAAI,CAACkB,KAAM;QAClBC,MAAM,EAAEnB,IAAI,CAACmB;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeH,CAAC;AAEd;AAACf,EAAA,CA9FQD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAgGlB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}