{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { getData } from \"../service/api\";\nimport { Chart } from \"react-google-charts\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const chartData = [['Data', 'Intensity', 'Likelihood', 'Relevance']];\n  // const [chartData, setChartData] = useState({});\n  // const [chartOptions, setChartOptions] = useState({})\n\n  const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\n  const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\n  //     const data = {\n  //         \"chartType\":\"ColumnChart\",\n  //         \"chart\": [\n  //         [\"country\",\"intensity\"],\n  //         [\"United States of America\",6],\n  //         [\"United States of America\",6],\n  //         [\"Mexico\",6],\n  //         [\"Nigeria\",60],\n  //         [\"Lebanon\",6],\n  //     ],\n  //     \"options\": {\n  //         \"title\":\"Intensity\"\n  //     },\n  //     \"width\": \"100%\",\n  //     \"height\": \"400px\"\n  // }\n  // const chartData = {\n  //   labels: titles,\n  //   datasets: [\n  //     {\n  //       label: 'Intensity',\n  //       data: inValue,\n  //       backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\n  //       borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\n  //       borderWidth: 1,\n  //     },\n  //   ],\n  // };\n\n  // const chartOptions = {\n  //   scales: {\n  //     y: {\n  //       beginAtZero: true,\n  //       title: {\n  //         display: true,\n  //         text: 'Intensity',\n  //       },\n  //     },\n  //     x: {\n  //       title: {\n  //         display: true,\n  //         text: 'Title',\n  //       },\n  //     },\n  //   },\n  // }\n\n  const getDetails = async () => {\n    try {\n      const response = await getData();\n      console.log(response, \"response from server\");\n      setData(response === null || response === void 0 ? void 0 : response.data);\n    } catch (err) {\n      console.log(err, \"err in api\");\n    }\n  };\n  useEffect(() => {\n    getDetails();\n  }, []);\n  useEffect(() => {\n    data === null || data === void 0 ? void 0 : data.slice(0, 10).forEach(item => {\n      const {\n        intensity,\n        likelihood,\n        relevance,\n        country\n      } = item;\n      chartData.push([country, intensity, likelihood, relevance]);\n    });\n  }, [data]);\n  useEffect(() => {\n    console.log(chartData, \"chart data\");\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Intensity Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        width: '100%',\n        height: '400px',\n        chartType: \"BarChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this),\n        data: chartData,\n        options: {\n          chart: {\n            title: 'Data Chart'\n          },\n          bars: 'vertical',\n          hAxis: {\n            title: 'Country'\n          },\n          vAxis: {\n            title: 'Value'\n          },\n          series: {\n            1: {\n              axis: 'CategoryAxis'\n            }\n          },\n          axes: {\n            y: {\n              CategoryAxis: {\n                // Customize the options for the secondary category axis here\n                textStyle: {\n                  fontSize: 12 // Adjust the font size\n                },\n\n                titleTextStyle: {\n                  fontSize: 14,\n                  // Adjust the title font size\n                  color: 'red' // Change the title color\n                },\n\n                gridlines: {\n                  color: 'lightgray',\n                  // Change the gridlines color\n                  count: 5 // Adjust the number of gridlines\n                }\n                // Add any other customizations you need\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"aQQ7hVo58d/kJCPXJoQQg2iT8Os=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useRef","getData","Chart","Table","TableHead","TableBody","TableRow","TableCell","Typography","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","chartData","inValue","titles","getDetails","response","console","log","err","slice","forEach","item","intensity","likelihood","relevance","country","push","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","width","height","chartType","loader","options","chart","title","bars","hAxis","vAxis","series","axis","axes","y","CategoryAxis","textStyle","fontSize","titleTextStyle","color","gridlines","count","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/dashboard.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\r\n\r\nfunction Dashboard() {\r\n    const [data, setData] = useState([]);\r\n    const chartData = [['Data', 'Intensity', 'Likelihood','Relevance']];\r\n    // const [chartData, setChartData] = useState({});\r\n    // const [chartOptions, setChartOptions] = useState({})\r\n\r\n        const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\r\n        const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\r\n    //     const data = {\r\n    //         \"chartType\":\"ColumnChart\",\r\n    //         \"chart\": [\r\n    //         [\"country\",\"intensity\"],\r\n    //         [\"United States of America\",6],\r\n    //         [\"United States of America\",6],\r\n    //         [\"Mexico\",6],\r\n    //         [\"Nigeria\",60],\r\n    //         [\"Lebanon\",6],\r\n    //     ],\r\n    //     \"options\": {\r\n    //         \"title\":\"Intensity\"\r\n    //     },\r\n    //     \"width\": \"100%\",\r\n    //     \"height\": \"400px\"\r\n    // }\r\n        // const chartData = {\r\n        //   labels: titles,\r\n        //   datasets: [\r\n        //     {\r\n        //       label: 'Intensity',\r\n        //       data: inValue,\r\n        //       backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\r\n        //       borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\r\n        //       borderWidth: 1,\r\n        //     },\r\n        //   ],\r\n        // };\r\n      \r\n        // const chartOptions = {\r\n        //   scales: {\r\n        //     y: {\r\n        //       beginAtZero: true,\r\n        //       title: {\r\n        //         display: true,\r\n        //         text: 'Intensity',\r\n        //       },\r\n        //     },\r\n        //     x: {\r\n        //       title: {\r\n        //         display: true,\r\n        //         text: 'Title',\r\n        //       },\r\n        //     },\r\n        //   },\r\n        // }\r\n\r\n    \r\n    const getDetails = async() => {\r\n        try {\r\n        const response = await getData();\r\n        console.log(response,\"response from server\")\r\n         setData(response?.data);\r\n    }\r\n    catch(err) {\r\n      console.log(err,\"err in api\")\r\n    }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDetails()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      data?.slice(0,10).forEach((item) => {\r\n        const {intensity, likelihood,relevance,country} = item;\r\n        chartData.push([country, intensity, likelihood,relevance]);\r\n      })\r\n    },[data])\r\n\r\n    useEffect(()=> {\r\n        console.log(chartData,\"chart data\")\r\n    },[chartData])\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h5\">Intensity Chart</Typography>\r\n            <div>\r\n            <Chart\r\n                width={'100%'}\r\n                height={'400px'}\r\n                chartType=\"BarChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={chartData}\r\n                options={{\r\n                    chart: {\r\n                    title: 'Data Chart',\r\n                    },\r\n                    bars: 'vertical',\r\n                    hAxis: {\r\n                    title: 'Country',\r\n                    },\r\n                    vAxis: {\r\n                    title: 'Value',\r\n                    },\r\n                    series: {\r\n                        1: { axis: 'CategoryAxis' },\r\n                      },\r\n                      axes: {\r\n                        y: {\r\n                          CategoryAxis: {\r\n                            // Customize the options for the secondary category axis here\r\n                            textStyle: {\r\n                              fontSize: 12, // Adjust the font size\r\n                            },\r\n                            titleTextStyle: {\r\n                              fontSize: 14, // Adjust the title font size\r\n                              color: 'red', // Change the title color\r\n                            },\r\n                            gridlines: {\r\n                              color: 'lightgray', // Change the gridlines color\r\n                              count: 5, // Adjust the number of gridlines\r\n                            },\r\n                            // Add any other customizations you need\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n          </div>\r\n            {/* <Table>\r\n              <TableHead>\r\n                 <TableRow>\r\n                    <TableCell>Intensity</TableCell>\r\n                    <TableCell>Likelihood</TableCell>\r\n                    <TableCell>Relevance</TableCell>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>Topics</TableCell>\r\n                    <TableCell>Region</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                 </TableRow>\r\n              </TableHead>\r\n            </Table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}