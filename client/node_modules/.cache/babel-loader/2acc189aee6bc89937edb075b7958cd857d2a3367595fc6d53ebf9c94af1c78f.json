{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getData } from \"../service/api\";\nimport { Bar } from 'react-chartjs-2';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  // const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    getDetails();\n  }, []);\n  const getDetails = async () => {\n    try {\n      const response = await getData();\n      console.log(response, \"response from server\");\n      const data = response === null || response === void 0 ? void 0 : response.data;\n      console.log(data, \"data from api\");\n      if (data.length > 0) {\n        const intensityValues = data === null || data === void 0 ? void 0 : data.slice(0, 10);\n        const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\n        const titleInfo = data === null || data === void 0 ? void 0 : data.slice(0, 10);\n        const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\n        console.log(intensityValues, inValue, titles, \"intensity val\");\n        setChartData({\n          labels: titles,\n          datasets: [{\n            label: 'Intensity',\n            data: inValue,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            // Customize the color as needed\n            borderColor: 'rgba(75, 192, 192, 1)',\n            // Customize the color as needed\n            borderWidth: 1\n          }]\n        });\n        setChartOptions({\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Intensity'\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Title'\n              }\n            }\n          }\n        });\n      }\n    } catch (err) {\n      console.log(err, \"err in api\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Intensity Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"IwROKHPuKnEUHgI07gGP2QYlTYw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","getData","Bar","Table","TableHead","TableBody","TableRow","TableCell","Typography","jsxDEV","_jsxDEV","Dashboard","_s","chartData","setChartData","chartOptions","setChartOptions","getDetails","response","console","log","data","length","intensityValues","slice","inValue","titleInfo","titles","labels","datasets","label","backgroundColor","borderColor","borderWidth","scales","y","beginAtZero","title","display","text","x","err","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\r\n\r\nfunction Dashboard() {\r\n    // const [data, setData] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartOptions, setChartOptions] = useState({})\r\n\r\n    useEffect(() => {\r\n     getDetails();\r\n    },[])\r\n\r\n    \r\n    const getDetails = async() => {\r\n        try {\r\n        const response = await getData();\r\n        console.log(response,\"response from server\")\r\n        const data = response?.data\r\n        console.log(data,\"data from api\")\r\n        if(data.length > 0){\r\n        const intensityValues = data?.slice(0,10)\r\n        const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\r\n        const titleInfo = data?.slice(0,10)\r\n        const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\r\n        console.log(intensityValues,inValue,titles,\"intensity val\")\r\n      \r\n        setChartData({\r\n          labels: titles,\r\n          datasets: [\r\n            {\r\n              label: 'Intensity',\r\n              data: inValue,\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\r\n              borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        });\r\n      \r\n        setChartOptions({\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Intensity',\r\n              },\r\n            },\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Title',\r\n              },\r\n            },\r\n          },\r\n        });\r\n    }\r\n    }\r\n    catch(err) {\r\n      console.log(err,\"err in api\")\r\n    }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h5\">Intensity Chart</Typography>\r\n            <div>\r\n               <Bar data={chartData} options={chartOptions} />\r\n          </div>\r\n            {/* <Table>\r\n              <TableHead>\r\n                 <TableRow>\r\n                    <TableCell>Intensity</TableCell>\r\n                    <TableCell>Likelihood</TableCell>\r\n                    <TableCell>Relevance</TableCell>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>Topics</TableCell>\r\n                    <TableCell>Region</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                 </TableRow>\r\n              </TableHead>\r\n            </Table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}