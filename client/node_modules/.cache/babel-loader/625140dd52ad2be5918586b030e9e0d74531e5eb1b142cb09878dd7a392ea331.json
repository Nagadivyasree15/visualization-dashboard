{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\dashboard.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { getData } from \"../service/api\";\nimport { Bar } from 'react-chartjs-2';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  // const [data, setData] = useState([]);\n  // const [chartData, setChartData] = useState({});\n  // const [chartOptions, setChartOptions] = useState({})\n\n  const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\n  const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\n  const chartData = {\n    labels: titles,\n    datasets: [{\n      label: 'Intensity',\n      data: inValue,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      // Customize the color as needed\n      borderColor: 'rgba(75, 192, 192, 1)',\n      // Customize the color as needed\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Intensity'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Title'\n        }\n      }\n    }\n  };\n  const getDetails = async () => {\n    try {\n      const response = await getData();\n      console.log(response, \"response from server\");\n      const data = response === null || response === void 0 ? void 0 : response.data;\n    } catch (err) {\n      console.log(err, \"err in api\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Intensity Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useRef","getData","Bar","Table","TableHead","TableBody","TableRow","TableCell","Typography","jsxDEV","_jsxDEV","Dashboard","inValue","titles","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","chartOptions","scales","y","beginAtZero","title","display","text","x","getDetails","response","console","log","err","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/dashboard.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport  { Bar } from 'react-chartjs-2';\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\r\n\r\nfunction Dashboard() {\r\n    // const [data, setData] = useState([]);\r\n    // const [chartData, setChartData] = useState({});\r\n    // const [chartOptions, setChartOptions] = useState({})\r\n\r\n        const inValue = [6, 6, 6, 6, 6, 6, 60, 16, 16, 6];\r\n        const titles = ['United States of America', 'United States of America', 'United States of America', 'Mexico', '', '', '', '', 'Nigeria', 'Lebanon'];\r\n        const chartData = {\r\n          labels: titles,\r\n          datasets: [\r\n            {\r\n              label: 'Intensity',\r\n              data: inValue,\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)', // Customize the color as needed\r\n              borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        };\r\n      \r\n        const chartOptions = {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Intensity',\r\n              },\r\n            },\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Title',\r\n              },\r\n            },\r\n          },\r\n        }\r\n\r\n    \r\n    const getDetails = async() => {\r\n        try {\r\n        const response = await getData();\r\n        console.log(response,\"response from server\")\r\n        const data = response?.data;\r\n    }\r\n    catch(err) {\r\n      console.log(err,\"err in api\")\r\n    }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h5\">Intensity Chart</Typography>\r\n            <div>\r\n               <Bar data={chartData} options={chartOptions} /> \r\n          </div>\r\n            {/* <Table>\r\n              <TableHead>\r\n                 <TableRow>\r\n                    <TableCell>Intensity</TableCell>\r\n                    <TableCell>Likelihood</TableCell>\r\n                    <TableCell>Relevance</TableCell>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>Topics</TableCell>\r\n                    <TableCell>Region</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                 </TableRow>\r\n              </TableHead>\r\n            </Table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAAUC,GAAG,QAAQ,iBAAiB;AACtC,SAAQC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,SAASC,SAASA,CAAA,EAAG;EACjB;EACA;EACA;;EAEI,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACjD,MAAMC,MAAM,GAAG,CAAC,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC;EACnJ,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEF,MAAM;IACdG,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAEN,OAAO;MACbO,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MAAE;MACtCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAGL,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC1B,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAM9B,OAAO,CAAC,CAAC;MAChC+B,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,sBAAsB,CAAC;MAC5C,MAAMb,IAAI,GAAGa,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEb,IAAI;IAC/B,CAAC,CACD,OAAMgB,GAAG,EAAE;MACTF,OAAO,CAACC,GAAG,CAACC,GAAG,EAAC,YAAY,CAAC;IAC/B;EACA,CAAC;EAED,oBACIxB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA,CAACF,UAAU;MAAC4B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrD9B,OAAA;MAAAyB,QAAA,eACGzB,OAAA,CAACR,GAAG;QAACgB,IAAI,EAAEJ,SAAU;QAAC2B,OAAO,EAAEnB;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeH,CAAC;AAEd;AAACE,EAAA,GAxEQ/B,SAAS;AA0ElB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}