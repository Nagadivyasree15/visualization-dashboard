{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getData } from \"../service/api\";\nimport Chart from \"chart.js/auto\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState();\n  useEffect(() => {\n    getDetails();\n  }, []);\n  useEffect(() => {\n    const intensityValues = data.map(item => item.intensity);\n    const countries = data.map(item => item.country);\n    const ctx = document.getElementById(\"internsitychart\").getContext('2d');\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: countries,\n        datasets: [{\n          label: 'Intensity',\n          data: intensityValues,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          // Customize the color as needed\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Intensity'\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: 'Country'\n            }\n          }\n        }\n      }\n    });\n  }, [data]);\n  const getDetails = async () => {\n    const response = await getData();\n    console.log(response, \"response from server\");\n    setData(response === null || response === void 0 ? void 0 : response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Intensity Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"intensity-chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"5lknD3jXYujBT9pOqvzz+iT5qBw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","getData","Chart","Table","TableHead","TableBody","TableRow","TableCell","Typography","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","getDetails","intensityValues","map","item","intensity","countries","country","ctx","document","getElementById","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","title","display","text","x","response","console","log","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport Chart from \"chart.js/auto\";\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@mui/material\";\r\n\r\nfunction Dashboard() {\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n       getDetails();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        const intensityValues = data.map(item => item.intensity);\r\n        const countries = data.map(item => item.country);\r\n        const ctx = document.getElementById(\"internsitychart\").getContext('2d')\r\n        new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n              labels: countries,\r\n              datasets: [{\r\n                label: 'Intensity',\r\n                data: intensityValues,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                borderColor: 'rgba(75, 192, 192, 1)', // Customize the color as needed\r\n                borderWidth: 1\r\n              }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                  y: {\r\n                    beginAtZero: true,\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Intensity'\r\n                    }\r\n                  },\r\n                  x: {\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Country'\r\n                    }\r\n                  }\r\n                }\r\n            }\r\n        })\r\n    },[data])\r\n\r\n    const getDetails = async() => {\r\n        const response = await getData();\r\n        console.log(response,\"response from server\")\r\n        setData(response?.data)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h5\">Intensity Chart</Typography>\r\n            <canvas id=\"intensity-chart\"></canvas>\r\n            {/* <Table>\r\n              <TableHead>\r\n                 <TableRow>\r\n                    <TableCell>Intensity</TableCell>\r\n                    <TableCell>Likelihood</TableCell>\r\n                    <TableCell>Relevance</TableCell>\r\n                    <TableCell>Year</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>Topics</TableCell>\r\n                    <TableCell>Region</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                 </TableRow>\r\n              </TableHead>\r\n            </Table> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAAQC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAElCC,SAAS,CAAC,MAAM;IACbe,UAAU,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAELf,SAAS,CAAC,MAAM;IACZ,MAAMgB,eAAe,GAAGH,IAAI,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IACxD,MAAMC,SAAS,GAAGP,IAAI,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,OAAO,CAAC;IAChD,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;IACvE,IAAIvB,KAAK,CAACoB,GAAG,EAAE;MACXI,IAAI,EAAE,KAAK;MACXb,IAAI,EAAE;QACJc,MAAM,EAAEP,SAAS;QACjBQ,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,WAAW;UAClBhB,IAAI,EAAEG,eAAe;UACrBc,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,uBAAuB;UAAE;UACtCC,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACDC,OAAO,EAAE;QACLC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE,IAAI;YACjBC,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF,CAAC;UACDC,CAAC,EAAE;YACDH,KAAK,EAAE;cACLC,OAAO,EAAE,IAAI;cACbC,IAAI,EAAE;YACR;UACF;QACF;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,EAAC,CAAC1B,IAAI,CAAC,CAAC;EAET,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC1B,MAAM0B,QAAQ,GAAG,MAAMxC,OAAO,CAAC,CAAC;IAChCyC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,sBAAsB,CAAC;IAC5C3B,OAAO,CAAC2B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE5B,IAAI,CAAC;EAC3B,CAAC;EAED,oBACIH,OAAA;IAAAkC,QAAA,gBACIlC,OAAA,CAACF,UAAU;MAACqC,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrDvC,OAAA;MAAQwC,EAAE,EAAC;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAerC,CAAC;AAEd;AAACrC,EAAA,CArEQD,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAuElB,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}