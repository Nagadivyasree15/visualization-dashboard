{"ast":null,"code":"var _jsxFileName = \"D:\\\\DivyaSree_Data\\\\visualization-dashboard\\\\client\\\\src\\\\components\\\\countryChart.js\";\nimport React from 'react';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountryChart({\n  data\n}) {\n  const chartData = [['Country', 'Intensity', 'Likelihood', 'Relevance']];\n  data.slice(0, 10).forEach(item => {\n    const {\n      intensity,\n      likelihood,\n      relevance,\n      country\n    } = item;\n    chartData.push([country, intensity, likelihood, relevance]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '100%',\n      height: '400px',\n      chartType: \"ColumnChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this),\n      data: chartData,\n      options: {\n        title: 'Country Data',\n        hAxis: {\n          title: 'Country'\n        },\n        vAxis: {\n          title: 'Value'\n        },\n        seriesType: \"bars\"\n        // series: {\n        //     1: { axis: 'CategoryAxis' },\n        //   },\n        //   axes: {\n        //     y: {\n        //       CategoryAxis: {\n        //         // Customize the options for the secondary category axis here\n        //         textStyle: {\n        //           fontSize: 12, // Adjust the font size\n        //         },\n        //         titleTextStyle: {\n        //           fontSize: 14, // Adjust the title font size\n        //           color: 'red', // Change the title color\n        //         },\n        //         gridlines: {\n        //           color: 'lightgray', // Change the gridlines color\n        //           count: 5, // Adjust the number of gridlines\n        //         },\n        //         // Add any other customizations you need\n        //       },\n        //     },\n        //   },\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_c = CountryChart;\nexport default CountryChart;\nvar _c;\n$RefreshReg$(_c, \"CountryChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","CountryChart","data","chartData","slice","forEach","item","intensity","likelihood","relevance","country","push","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","chartType","loader","options","title","hAxis","vAxis","seriesType","_c","$RefreshReg$"],"sources":["D:/DivyaSree_Data/visualization-dashboard/client/src/components/countryChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\n\r\nfunction CountryChart({data}) {\r\n    const chartData = [['Country', 'Intensity', 'Likelihood', 'Relevance']];\r\n  \r\n    data.slice(0,10).forEach(item => {\r\n      const {\r\n        intensity,\r\n        likelihood,\r\n        relevance,\r\n        country,\r\n      } = item;\r\n  \r\n      chartData.push([country, intensity, likelihood, relevance]);\r\n    });\r\n\r\n    return(\r\n      <div>\r\n        <div>{chartData}</div>\r\n        <Chart\r\n        width={'100%'}\r\n        height={'400px'}\r\n        chartType=\"ColumnChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={chartData}\r\n        options={{\r\n            title: 'Country Data',\r\n            hAxis: { title: 'Country',},\r\n            vAxis: {title: 'Value'},\r\n            seriesType :\"bars\",\r\n            // series: {\r\n            //     1: { axis: 'CategoryAxis' },\r\n            //   },\r\n            //   axes: {\r\n            //     y: {\r\n            //       CategoryAxis: {\r\n            //         // Customize the options for the secondary category axis here\r\n            //         textStyle: {\r\n            //           fontSize: 12, // Adjust the font size\r\n            //         },\r\n            //         titleTextStyle: {\r\n            //           fontSize: 14, // Adjust the title font size\r\n            //           color: 'red', // Change the title color\r\n            //         },\r\n            //         gridlines: {\r\n            //           color: 'lightgray', // Change the gridlines color\r\n            //           count: 5, // Adjust the number of gridlines\r\n            //         },\r\n            //         // Add any other customizations you need\r\n            //       },\r\n            //     },\r\n            //   },\r\n            }}\r\n          />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CountryChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,YAAYA,CAAC;EAACC;AAAI,CAAC,EAAE;EAC1B,MAAMC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;EAEvED,IAAI,CAACE,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAACC,OAAO,CAACC,IAAI,IAAI;IAC/B,MAAM;MACJC,SAAS;MACTC,UAAU;MACVC,SAAS;MACTC;IACF,CAAC,GAAGJ,IAAI;IAERH,SAAS,CAACQ,IAAI,CAAC,CAACD,OAAO,EAAEH,SAAS,EAAEC,UAAU,EAAEC,SAAS,CAAC,CAAC;EAC7D,CAAC,CAAC;EAEF,oBACET,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAMT;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtBhB,OAAA,CAACF,KAAK;MACNmB,KAAK,EAAE,MAAO;MACdC,MAAM,EAAE,OAAQ;MAChBC,SAAS,EAAC,aAAa;MACvBC,MAAM,eAAEpB,OAAA;QAAAY,QAAA,EAAK;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;MACjCd,IAAI,EAAEC,SAAU;MAChBkB,OAAO,EAAE;QACLC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;UAAED,KAAK,EAAE;QAAU,CAAC;QAC3BE,KAAK,EAAE;UAACF,KAAK,EAAE;QAAO,CAAC;QACvBG,UAAU,EAAE;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGd;AAACU,EAAA,GAvDQzB,YAAY;AAyDrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}